


python iterators 










 
 
 
 
 
 
















  
    
  



  tutorials 
  references 
  exercises 
  videos
  pro new

  menu 

  
    
      
      log in
  

  
    
    paid courses
    website new
    



  




  
    
      
      
      html
      css
      javascript
      sql
      python
      php
      bootstrap
      how to
      w3.css
      java
      jquery
      c++
      c#
      r
      react
      kotlin
      ?
      ?

      ?


      
      
    
    

 dark mode

 dark code



 
 ×
 
  
   tutorials
  
  
   html and css
   learn html
   learn css
   learn rwd
   learn bootstrap
   learn w3.css
   learn colors
   learn icons
   learn graphics
   learn svg
   learn canvas
   learn how to
   learn sass   
   
   data analytics
   learn ai
   learn machine learning
   learn data science 
   learn numpy       
   learn pandas    
   learn scipy    
   learn matplotlib    
   learn statistics
   learn excel

   xml tutorials
   learn xml
   learn xml ajax
   learn xml dom
   learn xml dtd
   learn xml schema
   learn xslt
   learn xpath
   learn xquery
  
  
  
   javascript
   learn javascript
   learn jquery
   learn react
   learn angularjs
   learn json
   learn ajax
   learn appml
   learn w3.js

   programming
   learn python
   learn java
   learn c
   learn c++
   learn c#
   learn r
   learn kotlin
   learn go
   learn django
   
 
   server side
   learn sql
   learn mysql
   learn php
   learn asp
   learn node.js
   learn raspberry pi
   learn git
   learn aws cloud

   web building
   create a website new
   where to start
   web templates
   web statistics
   web certificates
   web development
   code editor
   test your typing speed
   play a code game
   cyber security
   accessibility
  
  
   data analytics
   learn ai
   learn machine learning
   learn data science 
   learn numpy    
   learn pandas    
   learn scipy    
   learn matplotlib    
   learn statistics
   learn excel
   learn google sheets

   xml tutorials
   learn xml
   learn xml ajax
   learn xml dom
   learn xml dtd
   learn xml schema
   learn xslt
   learn xpath
   learn xquery
  
 
 
 



 
 ×
 
 
   references
  
  
   html
   html tag reference
   html browser support   
   html event reference
   html color reference
   html attribute reference
   html canvas reference
   html svg reference
   google maps reference
   css
   css reference
   css browser support
   css selector reference
   bootstrap 3 reference
   bootstrap 4 reference
   w3.css reference
   icon reference
   sass reference
  
  
   javascript
   javascript reference
   html dom reference
   jquery reference
   angularjs reference
   appml reference
   w3.js reference

   programming
   python reference
   java reference
  
  
   server side
   sql reference
   mysql reference
   php reference
   asp reference
   xml
   xml dom reference
   xml http reference
   xslt reference
   xml schema reference
  
  
   character sets
   html character sets
   html ascii
   html ansi
   html windows-1252
   html iso-8859-1
   html symbols
   html utf-8
  
 
 
 



 
 ×
 
 
   exercises and quizzes
  
  
   exercises
   html exercises
   css exercises
   javascript exercises
   sql exercises
   mysql exercises
   php exercises
   python exercises
   numpy exercises
   pandas exercises
   scipy exercises
   jquery exercises
   java exercises
   c++ exercises
   c# exercises
   r exercises
   kotlin exercises
   go exercises
   bootstrap exercises
   bootstrap 4 exercises
   bootstrap 5 exercises
   git exercises
  
  
   quizzes
   html quiz
   css quiz
   javascript quiz
   sql quiz
   mysql quiz
   php quiz
   python quiz
   numpy quiz
   pandas quiz
   scipy quiz
   jquery quiz
   java quiz
   c++ quiz
   c# quiz
   r quiz
   xml quiz
   cyber security quiz
   bootstrap quiz
   bootstrap 4 quiz
   bootstrap 5 quiz
   accessibility quiz
  
  
   courses
  
   html course
   css course
   javascript course
   front end course
   sql course
   php course
   python course
   numpy course
   pandas course
   data analytics course
   jquery course
   java course
   c++ course
   c# course
   r course
   xml course
   cyber security course
   accessibility course
  
  
   certificates
  
   html certificate
   css certificate
   javascript certificate
   front end certificate
   sql certificate
   php certificate
   python certificate
   data science certificate
   bootstrap 3 certificate
   bootstrap 4 certificate
   jquery certificate
   java certificate
   c++ certificate
   react certificate
   xml certificate
  
 
 
 



  



  ×
  
    tutorials 
    
    references 
    
    exercises 
    
    paid courses
    spaces
    videos
    shop
    pro
  






  
    

python tutorial
python home
python intro
python get started
python syntax
python comments
python variables

  python variables
  variable names
  assign multiple values
  output variables
  global variables
  variable exercises

python data types
python numbers

python casting
python strings

  python strings
  slicing strings
  modify strings
  concatenate strings
  format strings
  escape characters
  string methods
  string exercises

python booleans
python operators
python lists

  python lists
  access list items
  change list items
  add list items
  remove list items
  loop lists
  list comprehension
  sort lists
  copy lists
  join lists
  list methods
  list exercises

python tuples

  python tuples
  access tuples
  update tuples
  unpack tuples
  loop tuples
  join tuples
  tuple methods
  tuple exercises

python sets

  python sets
  access set items
  add set items
  remove set items
  loop sets
  join sets
  set methods
  set exercises

python dictionaries

  python dictionaries
  access items
  change items
  add items
  remove items
  loop dictionaries
  copy dictionaries
  nested dictionaries
  dictionary methods
  dictionary exercise

python if...else
python while loops
python for loops

python functions
python lambda
python arrays
python classes/objects
python inheritance
python iterators
python scope
python modules
python dates
python math
python json
python regex
python pip
python try...except
python user input
python string formatting

file handling
python file handling
python read files
python write/create files
python delete files

python modules
numpy tutorial
pandas tutorial
scipy tutorial



python matplotlib
matplotlib intro
matplotlib get started
matplotlib pyplot
matplotlib plotting
matplotlib markers
matplotlib line
matplotlib labels
matplotlib grid
matplotlib subplot
matplotlib scatter
matplotlib bars
matplotlib histograms
matplotlib pie charts


machine learning
getting started
mean median mode
standard deviation
percentile
data distribution
normal data distribution
scatter plot
linear regression
polynomial regression
multiple regression
scale
train/test
decision tree

python mysql
mysql get started
mysql create database
mysql create table
mysql insert
mysql select
mysql where
mysql order by
mysql delete
mysql drop table
mysql update
mysql limit
mysql join

python mongodb
mongodb get started
mongodb create database
mongodb create collection
mongodb insert
mongodb find
mongodb query
mongodb sort
mongodb delete
mongodb drop collection
mongodb update
mongodb limit



python reference
python overview
python built-in functions
python string methods
python list methods
python dictionary methods
python tuple methods
python set methods
python file methods
python keywords
python exceptions
python glossary


module reference
random module
requests module
statistics module
math module
cmath module


python how to
remove list duplicates
reverse a string
add two numbers


python examples
python examples
python compiler
python exercises
python quiz
python certificate

      
    
  


  
    
      
        
        
        
          
        

      
python iterators

? previous
next ?



python iterators
an iterator is an object that contains a countable number of values.
an iterator is an object that can be iterated upon, meaning that you can 
traverse through all the values.
technically, in python, an iterator is an object which implements the 
iterator protocol, which consist of the methods __iter__() 
and __next__().


iterator vs iterable
lists, tuples, dictionaries, and sets are all iterable objects. they are iterable
containers which you can get an iterator from.
all these objects have a iter() method which is used to get an iterator:


example
return an iterator from a tuple, and print each value:
  
    mytuple = ("apple", "banana", "cherry")myit = iter(mytuple)
    print(next(myit))print(next(myit))print(next(myit))

try it yourself »


even strings are iterable objects, and can return an iterator:


example
strings are also iterable objects, containing a sequence of characters:
  
    mystr = "banana"myit = iter(mystr)
    print(next(myit))print(next(myit))print(next(myit))
    print(next(myit))print(next(myit))print(next(myit))

try it yourself »




looping through an iterator

we can also use a for loop to iterate through an iterable object:


example
iterate the values of a tuple:

    mytuple = ("apple", "banana", "cherry")
  for x in mytuple:
      print(x)
try it yourself »



example
iterate the characters of a string:

    mystr = "banana"
  for x in mystr:
      print(x)
try it yourself »


the for loop actually creates an iterator object and executes the next() 
method for each loop.




        
  
    
  
  



create an iterator

to create an object/class as an iterator you have to implement the methods
__iter__() and 
__next__() to your object.
as you have learned in the python 
classes/objects chapter, all classes have a function called
__init__(), which allows you to do some 
initializing when the object is being created.
the __iter__() method acts similar, you can 
do operations (initializing etc.), but must always return the iterator object 
itself.
the __next__() method also allows you to do 
operations, and must return the next item in the sequence.


example
create an iterator that returns numbers, starting with 1, and each sequence 
will increase by one (returning 1,2,3,4,5 etc.):

  class mynumbers:  def __iter__(self):    self.a = 
  1    return self  def __next__(self):    
  x = self.a    self.a += 1    return x
  myclass = mynumbers()myiter = iter(myclass)print(next(myiter))
  print(next(myiter))print(next(myiter))print(next(myiter))
  print(next(myiter))
try it yourself »



stopiteration

the example above would continue forever if you had enough next() statements, or if it was used in a 
for loop.
to prevent the iteration to go on forever, we can use the 
stopiteration statement.
in the __next__() method, we can add a terminating condition to raise an error if the iteration is done a specified number of times:


example
stop after 20 iterations:

  class mynumbers:  def __iter__(self):    self.a = 
  1    return self  def __next__(self):    
  if self.a <= 20:      x = self.a      
  self.a += 1      return x    
  else:      raise stopiterationmyclass = 
  mynumbers()myiter = iter(myclass)for x in myiter:  
  print(x)
  
try it yourself »






? previous
next ?








  
  
    
       
    
  
  

  



  
    new
  
  we just launchedw3schools videos
  
  explore now



color picker







  
    
    
    
        
  







get certifiedby completinga course today!


w3schools certified  .  2022



get started











  code game
  
  play game







  
    
      
        
      
    
  











  
  
    
  
  
  
    
  





report error



forum


about


shop





×

report error

if you want to report an error, or if you want to make a suggestion, do not hesitate to send us an e-mail:
help@w3schools.com






×     
thank you for helping us!
your message has been sent to w3schools.





top tutorials
html tutorial
css tutorial
javascript tutorial
how to tutorial
sql tutorial
python tutorial
w3.css tutorial
bootstrap tutorial
php tutorial
java tutorial
c++ tutorial
jquery tutorial




top references
html reference
css reference
javascript reference
sql reference
python reference
w3.css reference
bootstrap reference
php reference
html colors
java reference
angular reference
jquery reference




top examples
html examples
css examples
javascript examples
how to examples
sql examples
python examples
w3.css examples
bootstrap examples
php examples
java examples
xml examples
jquery examples






web courses
html course
css course
javascript course
front end course
sql course
python course
php course
jquery course
java course
c++ course
c# course
xml course

get certified »



        
        



w3schools is optimized for learning and training. examples might be simplified to improve reading and learning.
tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content.
while using w3schools, you agree to have read and accepted our terms of use, 
cookie and privacy policy.
copyright 1999-2022 by refsnes data. all rights reserved.
w3schools is powered by w3.css.



    












