


java modifiers










 
 
 
 
 
 
















  
    
  



  tutorials 
  references 
  exercises 
  videos
  pro new

  menu 

  
    
      
      log in
  

  
    
    paid courses
    website new
    



  




  
    
      
      
      html
      css
      javascript
      sql
      python
      php
      bootstrap
      how to
      w3.css
      java
      jquery
      c++
      c#
      r
      react
      kotlin
      ?
      ?

      ?


      
      
    
    

 dark mode

 dark code



 
 ×
 
  
   tutorials
  
  
   html and css
   learn html
   learn css
   learn rwd
   learn bootstrap
   learn w3.css
   learn colors
   learn icons
   learn graphics
   learn svg
   learn canvas
   learn how to
   learn sass   
   
   data analytics
   learn ai
   learn machine learning
   learn data science 
   learn numpy       
   learn pandas    
   learn scipy    
   learn matplotlib    
   learn statistics
   learn excel

   xml tutorials
   learn xml
   learn xml ajax
   learn xml dom
   learn xml dtd
   learn xml schema
   learn xslt
   learn xpath
   learn xquery
  
  
  
   javascript
   learn javascript
   learn jquery
   learn react
   learn angularjs
   learn json
   learn ajax
   learn appml
   learn w3.js

   programming
   learn python
   learn java
   learn c
   learn c++
   learn c#
   learn r
   learn kotlin
   learn go
   learn django
   
 
   server side
   learn sql
   learn mysql
   learn php
   learn asp
   learn node.js
   learn raspberry pi
   learn git
   learn aws cloud

   web building
   create a website new
   where to start
   web templates
   web statistics
   web certificates
   web development
   code editor
   test your typing speed
   play a code game
   cyber security
   accessibility
  
  
   data analytics
   learn ai
   learn machine learning
   learn data science 
   learn numpy    
   learn pandas    
   learn scipy    
   learn matplotlib    
   learn statistics
   learn excel
   learn google sheets

   xml tutorials
   learn xml
   learn xml ajax
   learn xml dom
   learn xml dtd
   learn xml schema
   learn xslt
   learn xpath
   learn xquery
  
 
 
 



 
 ×
 
 
   references
  
  
   html
   html tag reference
   html browser support   
   html event reference
   html color reference
   html attribute reference
   html canvas reference
   html svg reference
   google maps reference
   css
   css reference
   css browser support
   css selector reference
   bootstrap 3 reference
   bootstrap 4 reference
   w3.css reference
   icon reference
   sass reference
  
  
   javascript
   javascript reference
   html dom reference
   jquery reference
   angularjs reference
   appml reference
   w3.js reference

   programming
   python reference
   java reference
  
  
   server side
   sql reference
   mysql reference
   php reference
   asp reference
   xml
   xml dom reference
   xml http reference
   xslt reference
   xml schema reference
  
  
   character sets
   html character sets
   html ascii
   html ansi
   html windows-1252
   html iso-8859-1
   html symbols
   html utf-8
  
 
 
 



 
 ×
 
 
   exercises and quizzes
  
  
   exercises
   html exercises
   css exercises
   javascript exercises
   sql exercises
   mysql exercises
   php exercises
   python exercises
   numpy exercises
   pandas exercises
   scipy exercises
   jquery exercises
   java exercises
   c++ exercises
   c# exercises
   r exercises
   kotlin exercises
   go exercises
   bootstrap exercises
   bootstrap 4 exercises
   bootstrap 5 exercises
   git exercises
  
  
   quizzes
   html quiz
   css quiz
   javascript quiz
   sql quiz
   mysql quiz
   php quiz
   python quiz
   numpy quiz
   pandas quiz
   scipy quiz
   jquery quiz
   java quiz
   c++ quiz
   c# quiz
   r quiz
   xml quiz
   cyber security quiz
   bootstrap quiz
   bootstrap 4 quiz
   bootstrap 5 quiz
   accessibility quiz
  
  
   courses
  
   html course
   css course
   javascript course
   front end course
   sql course
   php course
   python course
   numpy course
   pandas course
   data analytics course
   jquery course
   java course
   c++ course
   c# course
   r course
   xml course
   cyber security course
   accessibility course
  
  
   certificates
  
   html certificate
   css certificate
   javascript certificate
   front end certificate
   sql certificate
   php certificate
   python certificate
   data science certificate
   bootstrap 3 certificate
   bootstrap 4 certificate
   jquery certificate
   java certificate
   c++ certificate
   react certificate
   xml certificate
  
 
 
 



  



  ×
  
    tutorials 
    
    references 
    
    exercises 
    
    paid courses
    spaces
    videos
    shop
    pro
  






  
    

java tutorial
java home
java intro
java get started
java syntax
java comments
java variables

variables
print variables
declare multiple variables
identifiers

java data types

data types
numbers
booleans
characters
non-primitive types


java type casting
java operators
java strings

strings
special characters

java math
java booleans
java if...else

if...else
short hand if...else

java switch
java while loop
java for loop

for loop
for-each loop

java break/continue
java arrays

arrays
loop through an array
multidimensional arrays



java methods
java methods
java method parameters
java method overloading
java scope
java recursion


java classes
java oop
java classes/objects
java class attributes
java class methods
java constructors
java modifiers
java encapsulation
java packages / api
java inheritance
java polymorphism
java inner classes
java abstraction
java interface
java enums
java user input
java date
java arraylist
java linkedlist
java hashmap
java hashset
java iterator
java wrapper classes
java exceptions
java regex
java threads
java lambda


java file handling
java files
java create/write files
java read files
java delete files


java how to
add two numbers


java reference
java keywords

  abstract
  boolean
  break
  byte
  case
  catch
  char
  class
  continue
  default
  do
  double
  else
  enum
  extends
  final
  finally
  float
  for
  if
  implements
  import
  instanceof
  int
  interface
  long
  new
  package
  private
  protected
  public
  return
  short
  static
  super
  switch
  this
  throw
  throws
  try
  void
  while

java string methods
java math methods


java examples
java examples
java compiler
java exercises
java quiz
java certificate


      
    
  


  
    
      
        

        
        
        

      
java modifiers

? previous
next ?



modifiers
by now, you are quite familiar with the public keyword that appears in almost 
all of our examples:

public class main


the public keyword is an access modifier, 
meaning that it is used to set the access level for classes, attributes, methods and 
constructors.
we divide modifiers into two groups:

access modifiers - controls the access level
non-access modifiers - do not control access level, but provides other functionality



access modifiers

for classes, you can use either public or default:





modifier
description
try it


public
the class is accessible by any other class
try it »


default
the class is only accessible by 
classes in the same package. this is used when you don't specify a modifier. you will learn more about packages in the packages chapter
try it »





for attributes, methods and constructors, you can use the one of the 
following:





modifier
description
try it


public
the code is accessible for all classes
try it »


private
the code is only accessible within the declared class
try it »


default
the code is only accessible in the same package. this is used when you don't specify a modifier. you will learn more about packages in the packages chapter
try it »


protected
the code is accessible in the same package and subclasses. you will learn more about subclasses and 
superclasses in the inheritance chapter
try it »






non-access modifiers

for classes, you can use either final or abstract:





modifier
description
try it


final
the class cannot be inherited by other classes (you will learn more about inheritance in the inheritance chapter)
try it »


abstract
the class cannot be used to create objects (to access an abstract class, it must be inherited from another class. you will learn more about inheritance and abstraction in the inheritance and abstraction chapters)
try it »






for attributes and methods, you can use the one of the 
following:





modifier
description


final
attributes and methods cannot be overridden/modified


static
attributes and methods belongs to the class, rather than an object


abstract
can only be used in an abstract class, and can only be used on methods. the method does not have a body, for example 
abstract void run();. the body is provided by the 
subclass (inherited from). you will learn more about inheritance and abstraction in the inheritance and abstraction chapters


transient
attributes and methods are skipped when serializing the object containing them


synchronized
methods can only be accessed by one thread at a time


volatile
the value of an attribute is not cached thread-locally, and is always read from the "main memory"










  
  



final
if you don't want the ability to override existing attribute values, declare 
attributes as final:

example
public class main {
  final int x = 10;
  final double pi = 3.14;

  public static void main(string[] args) {
    main myobj = new main();
    myobj.x = 50; // will generate an error: cannot assign a value to a final variable
    myobj.pi = 25; // will generate an error: cannot assign a value to a final variable
    system.out.println(myobj.x);
  }
}


try it yourself »




static
a static method means that it can be 
accessed without creating an object of the class, unlike public:

example
an example to demonstrate the differences between static and public methods:
public class main {
  // static method
  static void mystaticmethod() {
    system.out.println("static methods can be called without creating objects");
  }

  // public method
  public void mypublicmethod() {
    system.out.println("public methods must be called by creating objects");
  }

  // main method
  public static void main(string[ ] args) {
    mystaticmethod(); // call the static method
    // mypublicmethod(); this would output an error

    main myobj = new main(); // create an object of main
    myobj.mypublicmethod(); // call the public method
  }
}


try it yourself »




abstract
an abstract method belongs to an abstract class, and it does not have a body. 
the body is provided by the subclass:

example
// code from filename: main.java
// abstract classabstract class main {
  public string fname = "john";
  public int age = 24;
  public abstract void study(); // abstract method
}

// subclass (inherit from main)
class student extends main {
  public int graduationyear = 2018;
  public void study() { // the body of the abstract method is provided here
    system.out.println("studying all day long");
  }
}
// end code from filename: main.java

// code from filename: second.java
class second {
  public static void main(string[] args) {
    // create an object of the student class (which inherits attributes and methods from main)
    student myobj = new student();

    system.out.println("name: " + myobj.fname);
    system.out.println("age: " + myobj.age);
    system.out.println("graduation year: " + myobj.graduationyear);
    myobj.study(); // call abstract method  }
}


try it yourself »





? previous
next ?








  
  
    
  
  

  



  
    new
  
  we just launchedw3schools videos
  
  explore now



color picker







  
    
    
    
        
  







get certifiedby completinga course today!


w3schools certified  .  2022



get started











  code game
  
  play game







  
    
      
      
        
      
    
  











  
    
    
    
    
    
    
    
  





report error



forum


about


shop





×

report error

if you want to report an error, or if you want to make a suggestion, do not hesitate to send us an e-mail:
help@w3schools.com






×     
thank you for helping us!
your message has been sent to w3schools.





top tutorials
html tutorial
css tutorial
javascript tutorial
how to tutorial
sql tutorial
python tutorial
w3.css tutorial
bootstrap tutorial
php tutorial
java tutorial
c++ tutorial
jquery tutorial




top references
html reference
css reference
javascript reference
sql reference
python reference
w3.css reference
bootstrap reference
php reference
html colors
java reference
angular reference
jquery reference




top examples
html examples
css examples
javascript examples
how to examples
sql examples
python examples
w3.css examples
bootstrap examples
php examples
java examples
xml examples
jquery examples






web courses
html course
css course
javascript course
front end course
sql course
python course
php course
jquery course
java course
c++ course
c# course
xml course

get certified »



        
        



w3schools is optimized for learning and training. examples might be simplified to improve reading and learning.
tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content.
while using w3schools, you agree to have read and accepted our terms of use, 
cookie and privacy policy.
copyright 1999-2022 by refsnes data. all rights reserved.
w3schools is powered by w3.css.



    












