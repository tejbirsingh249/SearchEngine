


react useeffect










 
 
 
 
 
 















  
    
  



  tutorials 
  references 
  exercises 
  videos
  pro new

  menu 

  
    
      
      log in
  

  
    
    paid courses
    website new
    



  




  
    
      
      
      html
      css
      javascript
      sql
      python
      php
      bootstrap
      how to
      w3.css
      java
      jquery
      c++
      c#
      r
      react
      kotlin
      ?
      ?

      ?


      
      
    
    

 dark mode

 dark code



 
 ×
 
  
   tutorials
  
  
   html and css
   learn html
   learn css
   learn rwd
   learn bootstrap
   learn w3.css
   learn colors
   learn icons
   learn graphics
   learn svg
   learn canvas
   learn how to
   learn sass   
   
   data analytics
   learn ai
   learn machine learning
   learn data science 
   learn numpy       
   learn pandas    
   learn scipy    
   learn matplotlib    
   learn statistics
   learn excel

   xml tutorials
   learn xml
   learn xml ajax
   learn xml dom
   learn xml dtd
   learn xml schema
   learn xslt
   learn xpath
   learn xquery
  
  
  
   javascript
   learn javascript
   learn jquery
   learn react
   learn angularjs
   learn json
   learn ajax
   learn appml
   learn w3.js

   programming
   learn python
   learn java
   learn c
   learn c++
   learn c#
   learn r
   learn kotlin
   learn go
   learn django
   
 
   server side
   learn sql
   learn mysql
   learn php
   learn asp
   learn node.js
   learn raspberry pi
   learn git
   learn aws cloud

   web building
   create a website new
   where to start
   web templates
   web statistics
   web certificates
   web development
   code editor
   test your typing speed
   play a code game
   cyber security
   accessibility
  
  
   data analytics
   learn ai
   learn machine learning
   learn data science 
   learn numpy    
   learn pandas    
   learn scipy    
   learn matplotlib    
   learn statistics
   learn excel
   learn google sheets

   xml tutorials
   learn xml
   learn xml ajax
   learn xml dom
   learn xml dtd
   learn xml schema
   learn xslt
   learn xpath
   learn xquery
  
 
 
 



 
 ×
 
 
   references
  
  
   html
   html tag reference
   html browser support   
   html event reference
   html color reference
   html attribute reference
   html canvas reference
   html svg reference
   google maps reference
   css
   css reference
   css browser support
   css selector reference
   bootstrap 3 reference
   bootstrap 4 reference
   w3.css reference
   icon reference
   sass reference
  
  
   javascript
   javascript reference
   html dom reference
   jquery reference
   angularjs reference
   appml reference
   w3.js reference

   programming
   python reference
   java reference
  
  
   server side
   sql reference
   mysql reference
   php reference
   asp reference
   xml
   xml dom reference
   xml http reference
   xslt reference
   xml schema reference
  
  
   character sets
   html character sets
   html ascii
   html ansi
   html windows-1252
   html iso-8859-1
   html symbols
   html utf-8
  
 
 
 



 
 ×
 
 
   exercises and quizzes
  
  
   exercises
   html exercises
   css exercises
   javascript exercises
   sql exercises
   mysql exercises
   php exercises
   python exercises
   numpy exercises
   pandas exercises
   scipy exercises
   jquery exercises
   java exercises
   c++ exercises
   c# exercises
   r exercises
   kotlin exercises
   go exercises
   bootstrap exercises
   bootstrap 4 exercises
   bootstrap 5 exercises
   git exercises
  
  
   quizzes
   html quiz
   css quiz
   javascript quiz
   sql quiz
   mysql quiz
   php quiz
   python quiz
   numpy quiz
   pandas quiz
   scipy quiz
   jquery quiz
   java quiz
   c++ quiz
   c# quiz
   r quiz
   xml quiz
   cyber security quiz
   bootstrap quiz
   bootstrap 4 quiz
   bootstrap 5 quiz
   accessibility quiz
  
  
   courses
  
   html course
   css course
   javascript course
   front end course
   sql course
   php course
   python course
   numpy course
   pandas course
   data analytics course
   jquery course
   java course
   c++ course
   c# course
   r course
   xml course
   cyber security course
   accessibility course
  
  
   certificates
  
   html certificate
   css certificate
   javascript certificate
   front end certificate
   sql certificate
   php certificate
   python certificate
   data science certificate
   bootstrap 3 certificate
   bootstrap 4 certificate
   jquery certificate
   java certificate
   c++ certificate
   react certificate
   xml certificate
  
 
 
 



  



  ×
  
    tutorials 
    
    references 
    
    exercises 
    
    paid courses
    spaces
    videos
    shop
    pro
  






  
    

react tutorial
react home
react intro
react get started
react es6

  react es6
  es6 classes
  es6 arrow functions
  es6 variables
  es6 array methods
  es6 destructuring
  es6 spread operator
  es6 modules
  es6 ternary operator

react render html
react jsx
react components
react class
react props
react events
react conditionals
react lists
react forms
react router
react memo
react css styling
react sass styling

react hooks
what is a hook?
usestate
useeffect
usecontext
useref
usereducer
usecallback
usememo
custom hooks

react exercises
react quiz
react exercises
react certificate

      
    
  


  
    
      
        

        
        
        

      
react useeffect hooks

? previous
next ?




the useeffect hook allows you to perform side effects in your components.

some examples of side effects are: fetching data, directly updating the dom, and timers.

useeffect accepts two arguments. the second argument is optional.

useeffect(<function>, <dependency>)



let's use a timer as an example.


example:
  use settimeout() to count 1 second after initial render:
import { usestate, useeffect } from "react";
import reactdom from "react-dom";

function timer() {
  const [count, setcount] = usestate(0);

  useeffect(() => {
    settimeout(() => {
      setcount((count) => count + 1);
    }, 1000);
  });

  return <h1>i've rendered {count} times!</h1>;
}

reactdom.render(<timer />, document.getelementbyid('root'));

run 
example »



but wait!! it keeps counting even though it should only count once!

useeffect runs on every render. that means that when the count changes, a render happens, which then triggers another effect.

this is not what we want. there are several ways to control when side effects run.

we should always include the second parameter which accepts an array.
we can optionally pass dependencies to useeffect in this array.


1. no dependency passed:
useeffect(() => {
  //runs on every render
});



2. an empty array:
useeffect(() => {
  //runs only on the first render
}, []);



3. props or state values:
useeffect(() => {
  //runs on the first render
  //and any time any dependency value changes
}, [prop, state]);


so, to fix this issue, let's only run this effect on the initial render.


example:
  only run the effect on the initial render:
import { usestate, useeffect } from "react";
import reactdom from "react-dom";

function timer() {
  const [count, setcount] = usestate(0);

  useeffect(() => {
    settimeout(() => {
      setcount((count) => count + 1);
    }, 1000);
  }, []); // <- add empty brackets here

  return <h1>i've rendered {count} times!</h1>;
}

reactdom.render(<timer />, document.getelementbyid('root'));

run 
example »




example:
  here is an example of a useeffect hook that is dependent on a variable. if the count variable updates, the effect will run again:
import { usestate, useeffect } from "react";
import reactdom from "react-dom";

function counter() {
  const [count, setcount] = usestate(0);
  const [calculation, setcalculation] = usestate(0);

  useeffect(() => {
    setcalculation(() => count * 2);
  }, [count]); // <- add the count variable here

  return (
    <>
      <p>count: {count}</p>
      <button onclick={() => setcount((c) => c + 1)}>+</button>
      <p>calculation: {calculation}</p>
    </>
  );
}

reactdom.render(<counter />, document.getelementbyid('root'));

run 
example »



if there are multiple dependencies, they should be included in the useeffect dependency array.



w3schools certified  .  2022


get certified!
complete the react modules, do the exercises, take the exam and become w3schools certified!!

$95 enroll



effect cleanup
some effects require cleanup to reduce memory leaks.

timeouts, subscriptions, event listeners, and other effects that are no longer needed should be disposed.

we do this by including a return function at the end of the useeffect hook.

example:
  clean up the timer at the end of the useeffect hook:
import { usestate, useeffect } from "react";
import reactdom from "react-dom";

function timer() {
  const [count, setcount] = usestate(0);

  useeffect(() => {
    let timer = settimeout(() => {
    setcount((count) => count + 1);
  }, 1000);

  return () => cleartimeout(timer)
  }, []);

  return <h1>i've rendered {count} times!</h1>;
}

reactdom.render(<timer />, document.getelementbyid("root"));

run 
example »




note: to clear the timer, we had to name it.





test yourself with exercises

exercise:
what do you need to add to the second argument of a useeffect hook to limit it to running only on the first render?

import { usestate, useeffect } from "react";
import reactdom from "react-dom";

function app() {
  const [data, setdata] = usestate([]);

  useeffect(() => {
    setdata(getdata())
  }, );

  return <displaydata data={data} />;
}

reactdom.render(<app />, document.getelementbyid('root'));



submit answer »
start the exercise





? previous
next ?








  
  
    
  
  

  



  
    new
  
  we just launchedw3schools videos
  
  explore now



color picker







  
    
    
    
        
  







get certifiedby completinga course today!


w3schools certified  .  2022



get started











  code game
  
  play game







  
    
      
      
        
      
    
  











  
    
    
    
    
    
    
    
  





report error



forum


about


shop





×

report error

if you want to report an error, or if you want to make a suggestion, do not hesitate to send us an e-mail:
help@w3schools.com






×     
thank you for helping us!
your message has been sent to w3schools.





top tutorials
html tutorial
css tutorial
javascript tutorial
how to tutorial
sql tutorial
python tutorial
w3.css tutorial
bootstrap tutorial
php tutorial
java tutorial
c++ tutorial
jquery tutorial




top references
html reference
css reference
javascript reference
sql reference
python reference
w3.css reference
bootstrap reference
php reference
html colors
java reference
angular reference
jquery reference




top examples
html examples
css examples
javascript examples
how to examples
sql examples
python examples
w3.css examples
bootstrap examples
php examples
java examples
xml examples
jquery examples






web courses
html course
css course
javascript course
front end course
sql course
python course
php course
jquery course
java course
c++ course
c# course
xml course

get certified »



        
        



w3schools is optimized for learning and training. examples might be simplified to improve reading and learning.
tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content.
while using w3schools, you agree to have read and accepted our terms of use, 
cookie and privacy policy.
copyright 1999-2022 by refsnes data. all rights reserved.
w3schools is powered by w3.css.



    











